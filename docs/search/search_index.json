{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DigitalTolk Financial Pricelists In DT Financial, we have a feature called pricelists where we house all money-related aspects of the system. In most cases, one customer will only have one pricelist. The pricelists can be linked to municipality, company, or department. In some cases, other customers also have multiple pricelists -- one for each language and another pricelist for all the languages not specifically defined. Here is an example of a pricelist for a municipality called Region Halland . Inside that pricelist, this is what it looks like: Charges We have multiple charges for session time ( Charging ), transaction fees, inconvenience ( OB ) charges, travel reimbursements, etc. And if you notice, we have difference prices for phone and physical types. We also have separate sections for invoice and salary. We're doing it like this in DT because we only offer one service. And that's the Interpretation Service . And we already know what are the necessary charges for that type of service. Relating to Talentemp In DT, every booking has a type. It could be phone , physical , video , etc. In Talentemp, we don't have that one. Instead, we have service questions that are unique to each service. So if we are going to relate a phone booking in DT to Talentemp, it will look like this:","title":"DigitalTolk"},{"location":"#digitaltolk-financial","text":"","title":"DigitalTolk Financial"},{"location":"#pricelists","text":"In DT Financial, we have a feature called pricelists where we house all money-related aspects of the system. In most cases, one customer will only have one pricelist. The pricelists can be linked to municipality, company, or department. In some cases, other customers also have multiple pricelists -- one for each language and another pricelist for all the languages not specifically defined. Here is an example of a pricelist for a municipality called Region Halland . Inside that pricelist, this is what it looks like:","title":"Pricelists"},{"location":"#charges","text":"We have multiple charges for session time ( Charging ), transaction fees, inconvenience ( OB ) charges, travel reimbursements, etc. And if you notice, we have difference prices for phone and physical types. We also have separate sections for invoice and salary. We're doing it like this in DT because we only offer one service. And that's the Interpretation Service . And we already know what are the necessary charges for that type of service.","title":"Charges"},{"location":"#relating-to-talentemp","text":"In DT, every booking has a type. It could be phone , physical , video , etc. In Talentemp, we don't have that one. Instead, we have service questions that are unique to each service. So if we are going to relate a phone booking in DT to Talentemp, it will look like this:","title":"Relating to Talentemp"},{"location":"addita/","text":"Addita Age Factor When making a booking, the customer should be able to choose from different salary options or Pricelists for the talents/suppliers the booking is sent out to: Manual entry or salary (should apply to all talents/suppliers) According to age formula (where the talent gets paid according to his/her age) Both options will ask the customer a desired invoice and salary rate. Take note that if set, the value will override whatever is in the session time pricelist rules. This will only override rules where Time Calculation is set to Session Time How do we calculate the base salary? The goal is that the highest paid talent should give us minimum of 30% contribution margin. That gives us 70% as the total cost of talent. The 70% is inclusive of the talent's hourly wage + vacation payment + the social expenses . I will not detail the computation here as it's not relevant to this document anymore. If you want to learn about how we calculate the hourly wage, please ping Johan. Let's say the customer is willing to pay for 350kr per hour. The 70% for that is 245kr and that makes the hourly rate for the highest paid talent to 166kr . Deduction from the base Salary Below is a table on how we will more likely categorize our talents based on age and how much we will deduct from the base salary per age group: Age Group Deduction Hourly Rate 40 years and older 0kr 166kr 36-39 years old 5kr 161kr 31-35 years old 10kr 156kr 27-30 years old 15kr 151kr 24-26 years old 20kr 146kr 21-23 years old 30kr 136kr 18-20 years old 40kr 126kr Let's Build the Pricelist Manual Entry First, we create a pricelist and let's call it Manual Entry Pricelist Next, we create a rule and let's call it Flat Rate Field Value Name Flat Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 0 Notice that the Invoice Rate and Salary Rate are both zero. This is intentional because we want to force the customer to input the rates manually per booking. And since we want this rule to apply to all bookings, we don't need to apply any conditions here. Age Formula First, we create a pricelist and let's call it Age Factor Pricelist . This name should appear when creating a booking. Next, we create multiple rules: one for each age group. 40 years and older Pricelist Rule Field Value Name Flat Rate for 40 years and older Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 0 We set the Salary Rate to zero because this age group are our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 40 years and older 40 120 36-39 years old Pricelist Rule Field Value Name Flat Rate for 36-39 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 5 We set the Salary Rate to 5 because we want this age group to receive 5kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 36-39 years old 36 39 31-35 years old Pricelist Rule Field Value Name Flat Rate for 31-35 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 10 We set the Salary Rate to 10 because we want this age group to receive 10kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 31-35 years old 31 35 27-30 years old Pricelist Rule Field Value Name Flat Rate for 27-30 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 15 We set the Salary Rate to 15 because we want this age group to receive 15kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 27-30 years old 27 30 24-26 years old Pricelist Rule Field Value Name Flat Rate for 24-26 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 20 We set the Salary Rate to 20 because we want this age group to receive 20kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 24-26 years old 24 26 21-23 years old Pricelist Rule Field Value Name Flat Rate for 21-23 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 30 We set the Salary Rate to 30 because we want this age group to receive 30kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 21-23 years old 21 23 18-20 years old Pricelist Rule Field Value Name Flat Rate for 18-20 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 40 We set the Salary Rate to 40 because we want this age group to receive 40kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 18-20 years old 18 20","title":"Addita Age Factor"},{"location":"addita/#addita-age-factor","text":"When making a booking, the customer should be able to choose from different salary options or Pricelists for the talents/suppliers the booking is sent out to: Manual entry or salary (should apply to all talents/suppliers) According to age formula (where the talent gets paid according to his/her age) Both options will ask the customer a desired invoice and salary rate. Take note that if set, the value will override whatever is in the session time pricelist rules. This will only override rules where Time Calculation is set to Session Time","title":"Addita Age Factor"},{"location":"addita/#how-do-we-calculate-the-base-salary","text":"The goal is that the highest paid talent should give us minimum of 30% contribution margin. That gives us 70% as the total cost of talent. The 70% is inclusive of the talent's hourly wage + vacation payment + the social expenses . I will not detail the computation here as it's not relevant to this document anymore. If you want to learn about how we calculate the hourly wage, please ping Johan. Let's say the customer is willing to pay for 350kr per hour. The 70% for that is 245kr and that makes the hourly rate for the highest paid talent to 166kr .","title":"How do we calculate the base salary?"},{"location":"addita/#deduction-from-the-base-salary","text":"Below is a table on how we will more likely categorize our talents based on age and how much we will deduct from the base salary per age group: Age Group Deduction Hourly Rate 40 years and older 0kr 166kr 36-39 years old 5kr 161kr 31-35 years old 10kr 156kr 27-30 years old 15kr 151kr 24-26 years old 20kr 146kr 21-23 years old 30kr 136kr 18-20 years old 40kr 126kr","title":"Deduction from the base Salary"},{"location":"addita/#lets-build-the-pricelist","text":"","title":"Let's Build the Pricelist"},{"location":"addita/#manual-entry","text":"First, we create a pricelist and let's call it Manual Entry Pricelist Next, we create a rule and let's call it Flat Rate Field Value Name Flat Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 0 Notice that the Invoice Rate and Salary Rate are both zero. This is intentional because we want to force the customer to input the rates manually per booking. And since we want this rule to apply to all bookings, we don't need to apply any conditions here.","title":"Manual Entry"},{"location":"addita/#age-formula","text":"First, we create a pricelist and let's call it Age Factor Pricelist . This name should appear when creating a booking. Next, we create multiple rules: one for each age group.","title":"Age Formula"},{"location":"addita/#40-years-and-older","text":"Pricelist Rule Field Value Name Flat Rate for 40 years and older Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 0 We set the Salary Rate to zero because this age group are our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 40 years and older 40 120","title":"40 years and older"},{"location":"addita/#36-39-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 36-39 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 5 We set the Salary Rate to 5 because we want this age group to receive 5kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 36-39 years old 36 39","title":"36-39 years old"},{"location":"addita/#31-35-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 31-35 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 10 We set the Salary Rate to 10 because we want this age group to receive 10kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 31-35 years old 31 35","title":"31-35 years old"},{"location":"addita/#27-30-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 27-30 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 15 We set the Salary Rate to 15 because we want this age group to receive 15kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 27-30 years old 27 30","title":"27-30 years old"},{"location":"addita/#24-26-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 24-26 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 20 We set the Salary Rate to 20 because we want this age group to receive 20kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 24-26 years old 24 26","title":"24-26 years old"},{"location":"addita/#21-23-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 21-23 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 30 We set the Salary Rate to 30 because we want this age group to receive 30kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 21-23 years old 21 23","title":"21-23 years old"},{"location":"addita/#18-20-years-old","text":"Pricelist Rule Field Value Name Flat Rate for 18-20 years old Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Invoice Code 711 Invoice Rate 0 Salary Code 711 Salary Rate 40 We set the Salary Rate to 40 because we want this age group to receive 40kr less than our highest paid talents. Age Group Condition Description Minimum Age Maximum Age 18-20 years old 18 20","title":"18-20 years old"},{"location":"conditions/","text":"Pricelist Rule Conditions A pricelist rule may be attached to certain conditions to limit how and when it is executed during charging calculation. If the rule is not attached to any conditions, then it will be executed in every booking. Meanwhile, if the rule is attached to multiple conditions, each rule has to pass in order for the rule to be executed. Currently, we have 5 rule conditions available: Service Question Answers Timings Holidays Age Group Experience Service Question Answers This condition will be applied if we want to differentiate the prices between different service question answers. For example, you want to create a rule for Orthopedic doctors only. The rule condition should look like this: Service Question Answers Specialization Orthopedic Or if you want to create a rule for both Orthopedic doctors and Pediatricians, then the rule condition should look like this: Service Answers Specialization Orthopedic, Pediatrics Take note that the condition will pass if the doctor is either an Orthopedic or a Pediatrician. If you want to create a condition where you want to apply the pricelist rule to doctors who are both Orthopedic and Pediatrician, the condition should look like this: Service Answers Specialization Orthopedic Specialization Pediatrics Timings This condition will be applied if we want to limit certain rules to be executed only at certain days and/or times. In the screenshot above, the first condition is applied on Monday-Friday from 8:00AM to 5:00PM . The second condition is applied on Monday-Friday from 05:01PM - 10:00PM . The second condition is applied on Monday-Friday from 10:01PM - 07:59AM the next day. The fourth condition is applied on Saturday-Sunday whole day. Take note that if you add two timing conditions, both condition should pass in order for this rule to be executed. If only condition has passed, then this rule will be skipped. Holidays In DT, there are two types of holidays: minor and major holidays. In Talentemp, I would like to think of them as holiday groups. Basically, we create two holiday groups: minor and major holiday groups. Or we can even create more groups if more comes to mind. And then each holiday created will be linked to a holiday group. Now if we create a rule called Minor Holiday Bonus , we will apply a holiday group condition to that rule. The rule can also be linked to a specific holiday condition, like Easter Egg Bonus . Age Group Together with Currency Base Deduction , we apply that rule to certain age groups conditions. Let's say we want to give people who are 65 years old and above a higher pay, then we create a rule with a higher salary rate and apply it to age group 65 to 100 . Experience Like Age Group , this is a condition related to number of years/months. Only this time, we calculate the years of experience instead of the talent's age.","title":"Pricelist Rule Conditions"},{"location":"conditions/#pricelist-rule-conditions","text":"A pricelist rule may be attached to certain conditions to limit how and when it is executed during charging calculation. If the rule is not attached to any conditions, then it will be executed in every booking. Meanwhile, if the rule is attached to multiple conditions, each rule has to pass in order for the rule to be executed. Currently, we have 5 rule conditions available: Service Question Answers Timings Holidays Age Group Experience","title":"Pricelist Rule Conditions"},{"location":"conditions/#service-question-answers","text":"This condition will be applied if we want to differentiate the prices between different service question answers. For example, you want to create a rule for Orthopedic doctors only. The rule condition should look like this: Service Question Answers Specialization Orthopedic Or if you want to create a rule for both Orthopedic doctors and Pediatricians, then the rule condition should look like this: Service Answers Specialization Orthopedic, Pediatrics Take note that the condition will pass if the doctor is either an Orthopedic or a Pediatrician. If you want to create a condition where you want to apply the pricelist rule to doctors who are both Orthopedic and Pediatrician, the condition should look like this: Service Answers Specialization Orthopedic Specialization Pediatrics","title":"Service Question Answers"},{"location":"conditions/#timings","text":"This condition will be applied if we want to limit certain rules to be executed only at certain days and/or times. In the screenshot above, the first condition is applied on Monday-Friday from 8:00AM to 5:00PM . The second condition is applied on Monday-Friday from 05:01PM - 10:00PM . The second condition is applied on Monday-Friday from 10:01PM - 07:59AM the next day. The fourth condition is applied on Saturday-Sunday whole day. Take note that if you add two timing conditions, both condition should pass in order for this rule to be executed. If only condition has passed, then this rule will be skipped.","title":"Timings"},{"location":"conditions/#holidays","text":"In DT, there are two types of holidays: minor and major holidays. In Talentemp, I would like to think of them as holiday groups. Basically, we create two holiday groups: minor and major holiday groups. Or we can even create more groups if more comes to mind. And then each holiday created will be linked to a holiday group. Now if we create a rule called Minor Holiday Bonus , we will apply a holiday group condition to that rule. The rule can also be linked to a specific holiday condition, like Easter Egg Bonus .","title":"Holidays"},{"location":"conditions/#age-group","text":"Together with Currency Base Deduction , we apply that rule to certain age groups conditions. Let's say we want to give people who are 65 years old and above a higher pay, then we create a rule with a higher salary rate and apply it to age group 65 to 100 .","title":"Age Group"},{"location":"conditions/#experience","text":"Like Age Group , this is a condition related to number of years/months. Only this time, we calculate the years of experience instead of the talent's age.","title":"Experience"},{"location":"playground/","text":"Let's Play! The Simplest Flow This flow is about paying a flat rate for all our Customer Service employees. The salary rate will be 300kr per hour. First, we create a pricelist for Customer Service and we link it to our internal pool. We don't need to link to any customers because we are the customer. Second, we create a rule and let's call it Weekday Daytime Rate . Field Value Name Weekday Daytime Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 350 And then we apply this rule to Timings condition. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes No No 08:00 - 18:00 Since we don't let our talents work at night and on the weekend, we don't need to create another rules for them. The Parts Charging Flow In this flow, we are going to emulate the parts charging in DT financial. Here's the charging rule: For the 1st 30 minutes of the booking, we are going to pay the talent 300kr The next 30 minutes, we are going to pay the talent 275kr on top of the 300kr (from the first 30 minutes) After the first 60 minutes, we are going to pay the talent 50kr on top of the 575kr for every 5 minutes in excess. This rate is effective 24/7 On the weekend, we will pay the talent an extra 10% if the booking falls on a weekend. First, we create a pricelist for Customer Service and link it to our internal pool. Second, we create a rule for the first 30 minutes and let's call it First 30 Minutes . Field Value Name First 30 Minutes Charging Type Currency Time Calculation Session Time Charging Frequency Range Charging Start-End Minutes 0-30 Salary Code 711 Salary Rate 300 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Next, we create another rule for the next 30 minutes and let's call it After the First 30 Minutes . Field Value Name After the First 30 Minutes Charging Type Currency Time Calculation Session Time Charging Frequency Range Charging Start-End Minutes 31-60 Salary Code 711 Salary Rate 275 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Moreover, we create another rule for the extra 5 minutes after the first hour and let's call it Every 5 Minutes After the First Hour Now, this rule will be different from the first two because the Charging Frequency will be set to Interval . We will also define the Offset value because we will skip the first hour from this interval as it is presumably already paid. Field Value Name Every 5 Minutes After the First Hour Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-5 Charging Offset in Minutes 60 Salary Code 711 Salary Rate 50 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Lastly, we will create another rule for the weekend extra pay and let's call it Weekend Bonus Field Value Name Weekend Bonus Charging Type Percentage Time Calculation Session Time Rules to Calculate the Percentage From First 30 Minutes , After the First 30 Minutes , Every 5 Minutes After the First Hour Salary Code 711 Salary Rate 10 And then, we apply this rule to Timings condition so it will be executed only on weekends but regardless of the time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time No No No No No Yes Yes 00:00 - 23:59 Notice that the Weekend Bonus rule has an extra field called Rules to Calculate the Percentage From and its value is the first the rules that we created to implement the Parts Charging Flow. This means that if a booking falls in a weekend, we sum the charges created for these 3 rules, and we apply 10% of it and add it as another charge. The Not-So-Simplest Flow Let's extend our Simplest Flow and another rate if the booking falls in the evening. This time, we're paying our talents 400kr per hour. Under the same pricelist that we created in The Simplest Flow , we create another rule and let's call it Weekday Evening Rate . Field Value Name Weekday Evening Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 400 And then we apply this rule to Timings condition. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes No No 18:01 - 23:00 Now if the booking falls on weekday from 6:01 PM to 11:00 PM , we are paying our talents a higher rate than what we usually pay during the daytime. The Booking Type Flow In this flow, we will attempt to replicate DT financial paying for different prices per booking type. The service will be called Interpretation . It has one service question called Booking Type and that question has two possible options: Phone and Physical . For Phone bookings, we will pay 350kr per hour while we pay 400kr per hour for the Physical booking. First, we create a pricelist for the Interpretation service and link it to our internal pool. Next, we'll create a rule for the Phone booking and let's call it Phone Booking Rate . Field Value Name Phone Booking Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 350 And then we apply this rule to Service Question Answers condition. Service Question Answers Booking Type Phone Lastly, we create another rule for the Physical booking and let's call it Physical Booking Rate . Field Value Name Physical Booking Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 400 And then we apply this rule to Service Question Answers condition. Service Question Answers Booking Type Physical The Weekend or Minor Holiday Flow In this flow we will avoid duplication of charges from similar pricelist rules. The way we can accomplish that is by using the Pricelist Rule Group . The scenario would be that: If the booking falls on a minor holiday, we will give the talent a bonus of 250kr one time. If the booking falls on a weekend, we will give the talent a bonus of 200kr one time. Now, it's easy, we create one rule for the minor holiday and we create one rule for the weekend. But what happens if the booking falls on a weekend that is also a minor holiday? Correct! It will create two charges. But we don't want that, do we? This is where Pricelist Rule Group comes into play. Pricelist Rule Group that only one of its member rules will be charged (whichever is highest among them). While creating two rules described above is correct, we also have to group into one to make sure that we will not be charged twice. First, create a new Pricelist Rule Group and name it Weekend or Minor Holiday Group . Next, create a rule for the minor holiday and make it a member of the Weekend or Minor Holiday Group . And then, create another rule for the weekend and make it a member of the same group.","title":"Common Flows"},{"location":"playground/#lets-play","text":"","title":"Let's Play!"},{"location":"playground/#the-simplest-flow","text":"This flow is about paying a flat rate for all our Customer Service employees. The salary rate will be 300kr per hour. First, we create a pricelist for Customer Service and we link it to our internal pool. We don't need to link to any customers because we are the customer. Second, we create a rule and let's call it Weekday Daytime Rate . Field Value Name Weekday Daytime Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 350 And then we apply this rule to Timings condition. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes No No 08:00 - 18:00 Since we don't let our talents work at night and on the weekend, we don't need to create another rules for them.","title":"The Simplest Flow"},{"location":"playground/#the-parts-charging-flow","text":"In this flow, we are going to emulate the parts charging in DT financial. Here's the charging rule: For the 1st 30 minutes of the booking, we are going to pay the talent 300kr The next 30 minutes, we are going to pay the talent 275kr on top of the 300kr (from the first 30 minutes) After the first 60 minutes, we are going to pay the talent 50kr on top of the 575kr for every 5 minutes in excess. This rate is effective 24/7 On the weekend, we will pay the talent an extra 10% if the booking falls on a weekend. First, we create a pricelist for Customer Service and link it to our internal pool. Second, we create a rule for the first 30 minutes and let's call it First 30 Minutes . Field Value Name First 30 Minutes Charging Type Currency Time Calculation Session Time Charging Frequency Range Charging Start-End Minutes 0-30 Salary Code 711 Salary Rate 300 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Next, we create another rule for the next 30 minutes and let's call it After the First 30 Minutes . Field Value Name After the First 30 Minutes Charging Type Currency Time Calculation Session Time Charging Frequency Range Charging Start-End Minutes 31-60 Salary Code 711 Salary Rate 275 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Moreover, we create another rule for the extra 5 minutes after the first hour and let's call it Every 5 Minutes After the First Hour Now, this rule will be different from the first two because the Charging Frequency will be set to Interval . We will also define the Offset value because we will skip the first hour from this interval as it is presumably already paid. Field Value Name Every 5 Minutes After the First Hour Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-5 Charging Offset in Minutes 60 Salary Code 711 Salary Rate 50 And then, we apply this rule to Timings condition so it will be executed in regardless of the day and time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes Yes Yes 00:00 - 23:59 Lastly, we will create another rule for the weekend extra pay and let's call it Weekend Bonus Field Value Name Weekend Bonus Charging Type Percentage Time Calculation Session Time Rules to Calculate the Percentage From First 30 Minutes , After the First 30 Minutes , Every 5 Minutes After the First Hour Salary Code 711 Salary Rate 10 And then, we apply this rule to Timings condition so it will be executed only on weekends but regardless of the time the booking falls in. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time No No No No No Yes Yes 00:00 - 23:59 Notice that the Weekend Bonus rule has an extra field called Rules to Calculate the Percentage From and its value is the first the rules that we created to implement the Parts Charging Flow. This means that if a booking falls in a weekend, we sum the charges created for these 3 rules, and we apply 10% of it and add it as another charge.","title":"The Parts Charging Flow"},{"location":"playground/#the-not-so-simplest-flow","text":"Let's extend our Simplest Flow and another rate if the booking falls in the evening. This time, we're paying our talents 400kr per hour. Under the same pricelist that we created in The Simplest Flow , we create another rule and let's call it Weekday Evening Rate . Field Value Name Weekday Evening Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 400 And then we apply this rule to Timings condition. Monday Tuesday Wednesday Thursday Friday Saturday Sunday Time Yes Yes Yes Yes Yes No No 18:01 - 23:00 Now if the booking falls on weekday from 6:01 PM to 11:00 PM , we are paying our talents a higher rate than what we usually pay during the daytime.","title":"The Not-So-Simplest Flow"},{"location":"playground/#the-booking-type-flow","text":"In this flow, we will attempt to replicate DT financial paying for different prices per booking type. The service will be called Interpretation . It has one service question called Booking Type and that question has two possible options: Phone and Physical . For Phone bookings, we will pay 350kr per hour while we pay 400kr per hour for the Physical booking. First, we create a pricelist for the Interpretation service and link it to our internal pool. Next, we'll create a rule for the Phone booking and let's call it Phone Booking Rate . Field Value Name Phone Booking Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 350 And then we apply this rule to Service Question Answers condition. Service Question Answers Booking Type Phone Lastly, we create another rule for the Physical booking and let's call it Physical Booking Rate . Field Value Name Physical Booking Rate Charging Type Currency Time Calculation Session Time Charging Frequency Interval Charging Start-End Minutes 0-60 Salary Code 711 Salary Rate 400 And then we apply this rule to Service Question Answers condition. Service Question Answers Booking Type Physical","title":"The Booking Type Flow"},{"location":"playground/#the-weekend-or-minor-holiday-flow","text":"In this flow we will avoid duplication of charges from similar pricelist rules. The way we can accomplish that is by using the Pricelist Rule Group . The scenario would be that: If the booking falls on a minor holiday, we will give the talent a bonus of 250kr one time. If the booking falls on a weekend, we will give the talent a bonus of 200kr one time. Now, it's easy, we create one rule for the minor holiday and we create one rule for the weekend. But what happens if the booking falls on a weekend that is also a minor holiday? Correct! It will create two charges. But we don't want that, do we? This is where Pricelist Rule Group comes into play. Pricelist Rule Group that only one of its member rules will be charged (whichever is highest among them). While creating two rules described above is correct, we also have to group into one to make sure that we will not be charged twice. First, create a new Pricelist Rule Group and name it Weekend or Minor Holiday Group . Next, create a rule for the minor holiday and make it a member of the Weekend or Minor Holiday Group . And then, create another rule for the weekend and make it a member of the same group.","title":"The Weekend or Minor Holiday Flow"},{"location":"tnt/","text":"Talentemp Financial Pricelists In the DT system, DT is acting as the supplier who has its own internal pool and a list of customers who have an agreement with DT. And just like in DT, suppliers in TnT can also create pricelists for their different customers, their dear talents inside the internal pool, and even for their own suppliers. In Talentemp, each pricelist is always tied to a service. And optionally, it can also be attached to a specific customer, supplier, or internal pool. Here's an overview: Rules In DT, we have specific types of charges like Charging , Travel , OB , etc. In Talentemp, we try to be as dynamic as possible when it comes to charging because we have a wide variety of services provided. As a general rule, anything that charges the customer or anything that pays the talent is a pricelist rule. A pricelist rule is a set of conditions to which when everything is met, will apply a charge to either invoice or salary or even both. Here's an overview of what a pricelist rule will look like: Pricelist Rule Description Name A name is a description of the rule. In this example, we are creating a rule on how we charge and pay our talents when the booking falls on a weekday, and it's daytime. Group I will explain this in Playground . Charging Type Currently, we have 3 different charging type. Currency , Currency Base Deduction (I will need a better name for this soon), and Percentage Currency We will pick Currency if we charge the customer or pay the talent a specific amount. Let's say, during weekday daytime, I will charge the customer 200kr and pay the talent 100kr per hour. Currency Base Deduction I will actually need a better name for this soon. But let me just described this for now. A currency base deduction is an implementation of the age-formula requested by Addita. Let's say that the customer wants to pay for 350kr per hour during weekday daytime. To calculate the highest amount Addita will pay the talent, we have to ensure 30% profit first. The remaining amount will be subtracted with the vacation payment and social expenses. All in all, that leaves us with 166kr per hour for our highest paid talents. Now, our base currency is 166kr . Next, we define what will be the deduction for this rule. Please take a look at Salary Rate To better understand the deduction, here's an excerpt from the Addita age-formula document. This charging type is only for salary. So when this is selected for the rule, the invoice charging type will be automatically considered as Currency and the amount will be taken from Invoice Rate or from the booking itself if specified. Percentage We pick Percentage type if we only want to pay an additional amount on top of a rule or a set of rules. An example for this is a night Bonus. Let's say that if the booking falls between 10PM to 4AM , I will pay an extra of 30% to what's charged on the Weekday Rule . Take note that I only said Weekday Rule instead of Weekday Daytime Rule because in this case, we have a flat rate for all our bookings regardless of the time, and we just pay an extra if it falls on a specific time. Charging Frequency Charging frequency describes how often and when should we charge our customers and pay our talents. Currently, we have 3 types. One Time We pick one time if we only apply this rule once without consideration on whether how long the booking lasted or how much travel was done. This is useful if we only want to charge our customers transaction fees just by creating a booking. Or maybe different transaction fees for different service questions. If we pick One Time frequency, Time Calculation will be disabled and the value will be ignored during calculation. Interval Probably the most common charging frequency to be picked. Interval is when we want to charge our customers or pay our talents at a specific interval. One example is like we charge our customers 350kr per hour. If this frequency is picked, the value inside Charging Start-End Minutes must be set to 0-60 minutes to denote that this is an hourly interval. Otherwise, if the interval is every half hour, the value should be 0-30 . Range Range is used if the prices are different for each time range. In interval, every 30 minutes pays the same 175kr . So if the booking is for 1 hour, the charge would be 350kr . But that's not always the case. Sometimes, we pay the talent 175kr for the first 30 minutes . And the next 30 minutes, we will pay 150kr . So if the booking is 1 hour, the charge would only be 325kr . And every 5 minutes after the first hour, we will pay them 30kr per instance. This is called Parts in DT Financial. So if we pick range, we are going to create at least 3 rules for the scenario I described above. And here's how it will look like: Charging Type Time Calculation Charging Frequency Start-End Minutes Offset Minutes Invoice Rate Currency Session Time Range 0-30 0 175 Currency Session Time Range 31-60 0 150 Currency Session Time Interval 0-5 60 30 More information on how to assemble this will be described in the Playground . Time Calculation When charging frequency is set to Interval or Range , we also have to tell the rule which time are we going to calculate it from. Or how much time we have to apply for this rule. The possible values for this are: Urgent , Session Time , Creation To Start , and Travel Time Urgent This will be picked if we want to charge for bookings that are marked as urgent. This will only be charged once regardless of the value in Charging Frequency Session Time This calculates the length of the booking. Creation To Start This calculates the distance between the start of the booking and when the booking was created. This is useful if we want to charge for bookings created just 30 minutes before the start time. Travel Time This calculates the length of travel done by the talent. Charging Offset in Minutes Sometimes, there are agreements like we will reimburse the talent for their travel after the first 30 minutes. So if the talent traveled for 1 hour, the talent will be reimbursed for 30 minutes. If that's the case, the value for this field should be 30 . Charging Start-End Minutes Possible values for this field are described in Interval and Range Rules to Calculate the Percentage From This field is only enabled when the Charging Type is set to Percentage . This will hold the list of the pricelist rules. Invoice Charging Invoice Code This is also called as Konto in DT financial. I think Virpal or Jarre can explain this better than I do. Just think of this as a unique identifier for a specific charge. Invoice Rate The value for this is dependent on the Charging Type selected. If the charging type is Currency , the value should be the specific amount to be charge. If the charging type is Percentage , the value should be the rate in decimal form. So if you want to charge for 30% , set the value to 30 . Salary Charging Salary Code This is also called as L\u00f6neart in DT financial. This is the salary equivalent for Konto . A unique identifier for the talent's salary charge. Salary Rate The value for this is dependent on the Charging Type selected. If the charging type is Currency , the value should be the specific amount to be charge. If the charging type is Currency Base Deduction , the value should be the amount to be deducted from the highest salary (base currency). The calculation for the highest salary is described in Currency Base Deduction section. If the charging type is Percentage , the value should be the rate in decimal form. So if you want to charge for 30% , set the value to 30 .","title":"Pricelist and Rules"},{"location":"tnt/#talentemp-financial","text":"","title":"Talentemp Financial"},{"location":"tnt/#pricelists","text":"In the DT system, DT is acting as the supplier who has its own internal pool and a list of customers who have an agreement with DT. And just like in DT, suppliers in TnT can also create pricelists for their different customers, their dear talents inside the internal pool, and even for their own suppliers. In Talentemp, each pricelist is always tied to a service. And optionally, it can also be attached to a specific customer, supplier, or internal pool. Here's an overview:","title":"Pricelists"},{"location":"tnt/#rules","text":"In DT, we have specific types of charges like Charging , Travel , OB , etc. In Talentemp, we try to be as dynamic as possible when it comes to charging because we have a wide variety of services provided. As a general rule, anything that charges the customer or anything that pays the talent is a pricelist rule. A pricelist rule is a set of conditions to which when everything is met, will apply a charge to either invoice or salary or even both. Here's an overview of what a pricelist rule will look like:","title":"Rules"},{"location":"tnt/#pricelist-rule-description","text":"","title":"Pricelist Rule Description"},{"location":"tnt/#name","text":"A name is a description of the rule. In this example, we are creating a rule on how we charge and pay our talents when the booking falls on a weekday, and it's daytime.","title":"Name"},{"location":"tnt/#group","text":"I will explain this in Playground .","title":"Group"},{"location":"tnt/#charging-type","text":"Currently, we have 3 different charging type. Currency , Currency Base Deduction (I will need a better name for this soon), and Percentage","title":"Charging Type"},{"location":"tnt/#currency","text":"We will pick Currency if we charge the customer or pay the talent a specific amount. Let's say, during weekday daytime, I will charge the customer 200kr and pay the talent 100kr per hour.","title":"Currency"},{"location":"tnt/#currency-base-deduction","text":"I will actually need a better name for this soon. But let me just described this for now. A currency base deduction is an implementation of the age-formula requested by Addita. Let's say that the customer wants to pay for 350kr per hour during weekday daytime. To calculate the highest amount Addita will pay the talent, we have to ensure 30% profit first. The remaining amount will be subtracted with the vacation payment and social expenses. All in all, that leaves us with 166kr per hour for our highest paid talents. Now, our base currency is 166kr . Next, we define what will be the deduction for this rule. Please take a look at Salary Rate To better understand the deduction, here's an excerpt from the Addita age-formula document. This charging type is only for salary. So when this is selected for the rule, the invoice charging type will be automatically considered as Currency and the amount will be taken from Invoice Rate or from the booking itself if specified.","title":"Currency Base Deduction"},{"location":"tnt/#percentage","text":"We pick Percentage type if we only want to pay an additional amount on top of a rule or a set of rules. An example for this is a night Bonus. Let's say that if the booking falls between 10PM to 4AM , I will pay an extra of 30% to what's charged on the Weekday Rule . Take note that I only said Weekday Rule instead of Weekday Daytime Rule because in this case, we have a flat rate for all our bookings regardless of the time, and we just pay an extra if it falls on a specific time.","title":"Percentage"},{"location":"tnt/#charging-frequency","text":"Charging frequency describes how often and when should we charge our customers and pay our talents. Currently, we have 3 types.","title":"Charging Frequency"},{"location":"tnt/#one-time","text":"We pick one time if we only apply this rule once without consideration on whether how long the booking lasted or how much travel was done. This is useful if we only want to charge our customers transaction fees just by creating a booking. Or maybe different transaction fees for different service questions. If we pick One Time frequency, Time Calculation will be disabled and the value will be ignored during calculation.","title":"One Time"},{"location":"tnt/#interval","text":"Probably the most common charging frequency to be picked. Interval is when we want to charge our customers or pay our talents at a specific interval. One example is like we charge our customers 350kr per hour. If this frequency is picked, the value inside Charging Start-End Minutes must be set to 0-60 minutes to denote that this is an hourly interval. Otherwise, if the interval is every half hour, the value should be 0-30 .","title":"Interval"},{"location":"tnt/#range","text":"Range is used if the prices are different for each time range. In interval, every 30 minutes pays the same 175kr . So if the booking is for 1 hour, the charge would be 350kr . But that's not always the case. Sometimes, we pay the talent 175kr for the first 30 minutes . And the next 30 minutes, we will pay 150kr . So if the booking is 1 hour, the charge would only be 325kr . And every 5 minutes after the first hour, we will pay them 30kr per instance. This is called Parts in DT Financial. So if we pick range, we are going to create at least 3 rules for the scenario I described above. And here's how it will look like: Charging Type Time Calculation Charging Frequency Start-End Minutes Offset Minutes Invoice Rate Currency Session Time Range 0-30 0 175 Currency Session Time Range 31-60 0 150 Currency Session Time Interval 0-5 60 30 More information on how to assemble this will be described in the Playground .","title":"Range"},{"location":"tnt/#time-calculation","text":"When charging frequency is set to Interval or Range , we also have to tell the rule which time are we going to calculate it from. Or how much time we have to apply for this rule. The possible values for this are: Urgent , Session Time , Creation To Start , and Travel Time","title":"Time Calculation"},{"location":"tnt/#urgent","text":"This will be picked if we want to charge for bookings that are marked as urgent. This will only be charged once regardless of the value in Charging Frequency","title":"Urgent"},{"location":"tnt/#session-time","text":"This calculates the length of the booking.","title":"Session Time"},{"location":"tnt/#creation-to-start","text":"This calculates the distance between the start of the booking and when the booking was created. This is useful if we want to charge for bookings created just 30 minutes before the start time.","title":"Creation To Start"},{"location":"tnt/#travel-time","text":"This calculates the length of travel done by the talent.","title":"Travel Time"},{"location":"tnt/#charging-offset-in-minutes","text":"Sometimes, there are agreements like we will reimburse the talent for their travel after the first 30 minutes. So if the talent traveled for 1 hour, the talent will be reimbursed for 30 minutes. If that's the case, the value for this field should be 30 .","title":"Charging Offset in Minutes"},{"location":"tnt/#charging-start-end-minutes","text":"Possible values for this field are described in Interval and Range","title":"Charging Start-End Minutes"},{"location":"tnt/#rules-to-calculate-the-percentage-from","text":"This field is only enabled when the Charging Type is set to Percentage . This will hold the list of the pricelist rules.","title":"Rules to Calculate the Percentage From"},{"location":"tnt/#invoice-charging","text":"","title":"Invoice Charging"},{"location":"tnt/#invoice-code","text":"This is also called as Konto in DT financial. I think Virpal or Jarre can explain this better than I do. Just think of this as a unique identifier for a specific charge.","title":"Invoice Code"},{"location":"tnt/#invoice-rate","text":"The value for this is dependent on the Charging Type selected. If the charging type is Currency , the value should be the specific amount to be charge. If the charging type is Percentage , the value should be the rate in decimal form. So if you want to charge for 30% , set the value to 30 .","title":"Invoice Rate"},{"location":"tnt/#salary-charging","text":"","title":"Salary Charging"},{"location":"tnt/#salary-code","text":"This is also called as L\u00f6neart in DT financial. This is the salary equivalent for Konto . A unique identifier for the talent's salary charge.","title":"Salary Code"},{"location":"tnt/#salary-rate","text":"The value for this is dependent on the Charging Type selected. If the charging type is Currency , the value should be the specific amount to be charge. If the charging type is Currency Base Deduction , the value should be the amount to be deducted from the highest salary (base currency). The calculation for the highest salary is described in Currency Base Deduction section. If the charging type is Percentage , the value should be the rate in decimal form. So if you want to charge for 30% , set the value to 30 .","title":"Salary Rate"},{"location":"todo/","text":"To Do This is a list of the things that will be decided for later. Overtime Charge We will pay the talent when they work overtime. The calculation will be based on the trade union agreement. OB from Trade Union OB calculation will be based on trade union agreement. Export Files Virpal will send me a copy of sample export files. Predefined Timings Define daytime, evening, nighttime. Holiday Groups Decide how holiday groups will be structured and how it can be shared among customers / suppliers. Age Group Decide how to calculate the age. Is it the actual age or based solely on year of birth. Import Pricelist Importing or copying pricelist from other customers or other service.","title":"To Do"},{"location":"todo/#to-do","text":"This is a list of the things that will be decided for later.","title":"To Do"},{"location":"todo/#overtime-charge","text":"We will pay the talent when they work overtime. The calculation will be based on the trade union agreement.","title":"Overtime Charge"},{"location":"todo/#ob-from-trade-union","text":"OB calculation will be based on trade union agreement.","title":"OB from Trade Union"},{"location":"todo/#export-files","text":"Virpal will send me a copy of sample export files.","title":"Export Files"},{"location":"todo/#predefined-timings","text":"Define daytime, evening, nighttime.","title":"Predefined Timings"},{"location":"todo/#holiday-groups","text":"Decide how holiday groups will be structured and how it can be shared among customers / suppliers.","title":"Holiday Groups"},{"location":"todo/#age-group","text":"Decide how to calculate the age. Is it the actual age or based solely on year of birth.","title":"Age Group"},{"location":"todo/#import-pricelist","text":"Importing or copying pricelist from other customers or other service.","title":"Import Pricelist"}]}